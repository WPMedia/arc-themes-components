@use "../../scss";

.c-carousel {
	--viewable-slides: var(--slides, 4);
	--slide-width: var(--carousel-slide-width, 25%);

	display: grid;
	grid-template-areas: "controls" "carousel";
	overflow: hidden;
	word-break: break-word;

	@include scss.component-properties("carousel");

	> * {
		grid-area: carousel;
	}

	&__image-counter-label {
		@include scss.component-properties("carousel-image-counter");
	}

	&:fullscreen {
		@include scss.component-properties("carousel-fullscreen");

		// setting fullscreen status for counter label
		// overrides counter label styles
		.c-carousel__image-counter-label {
			@include scss.component-properties("carousel-fullscreen-image-counter");
		}
	}

	&__track {
		/* stylelint-disable length-zero-no-unit */
		// Disabled the rule as the px value is needed within the calc below
		--slide-gap: var(--c-carousel-track-gap, 0px);
		display: flex;
		justify-self: center;
		transition: transform 0.4s ease-in;
		will-change: transform;

		@include scss.component-properties("carousel-track");
	}

	&__slide {
		flex: 0 0 calc(var(--slide-width) - var(--slide-gap));

		@include scss.component-properties("carousel-slide");
	}

	&__actions {
		display: flex;
		justify-content: space-between;
		place-self: center;
		width: 100%;
		z-index: 1;

		@include scss.component-properties("carousel-actions");
	}

	&__controls {
		grid-area: controls;
		display: flex;
		justify-content: space-between;
		place-self: start;
		width: 100%;

		@include scss.component-properties("carousel-controls");
	}

	&__button {
		@include scss.component-properties("carousel-button");

		&--next {
			margin-left: auto;

			@include scss.component-properties("carousel-button-next");
		}

		&--previous {
			@include scss.component-properties("carousel-button-previous");
		}

		&--enter-full-screen {
			@include scss.component-properties("carousel-button-enter-full-screen");
		}

		&--exit-full-screen {
			@include scss.component-properties("carousel-button-exit-full-screen");
		}

		&--start-auto-play {
			@include scss.component-properties("carousel-button-start-auto-play");
		}

		&--stop-auto-play {
			@include scss.component-properties("carousel-button-stop-auto-play");
		}
	}

	&__counter-controls-container {
		@include scss.component-properties("carousel-counter-controls-container");
	}

	&__expand-autoplay-container {
		@include scss.component-properties("carousel-expand-autoplay-container");
	}

	// add backdrop for setting full-screen background-color
	&::backdrop {
		@include scss.component-properties("carousel-backdrop");
	}
}
