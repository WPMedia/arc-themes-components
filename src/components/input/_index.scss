@use "../../scss";

// input container div
.c-input {
	@include scss.component-properties("input");

	&--hidden {
		@include scss.component-properties("input-hidden");
	}
}

// actual input element
.c-input__input {
	// added placeholder for default status
	// https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder
	// based on mocks, only input element is affected by focus state
	@include scss.component-with-state("input-input", [focus, placeholder]);

	&--error {
		@include scss.component-properties("input-input-error");
	}

	&--success {
		@include scss.component-properties("input-input-success");
	}

	&--warning {
		@include scss.component-properties("input-input-warning");
	}

	&--default {
		@include scss.component-properties("input-input-default");
	}
}

// label element
.c-input__label {
	@include scss.component-properties("input-label");

	&--error {
		@include scss.component-properties("input-label-error");
	}

	&--success {
		@include scss.component-properties("input-label-success");
	}

	&--warning {
		@include scss.component-properties("input-label-warning");
	}

	&--default {
		@include scss.component-properties("input-label-default");
	}
}

// container of hint and error area text
.c-input__tip {
	@include scss.component-properties("input-tip");

	&--error {
		@include scss.component-properties("input-tip-error");
	}

	&--success {
		@include scss.component-properties("input-tip-success");
	}

	&--warning {
		@include scss.component-properties("input-tip-warning");
	}

	&--default {
		@include scss.component-properties("input-tip-default");
	}
}
