name: RC Publish

on:
  push:
    branches:
      - rc

jobs:
  publish:
    name: RC build publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12"
          registry-url: "https://npm.pkg.github.com"

      - name: Cache Node files
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Clean install (CI) dependencies if lockfile (above) changed
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current datetime for re-running publish if necessary
        id: get-datetime
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"

      - name: Prerelease with tag, eg (`0.0.2-rc.{hash of commit}.{current-date-time}`)
        run: |
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --local user.name "$GITHUB_ACTOR"
          npm version prerelease --preid=rc.$(git rev-parse --short HEAD).${{ steps.get-datetime.outputs.date }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # publishing above version and tagging that version to this tag
      - name: Publish with the tag rc specified
        run: npm publish --tag rc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push tag of rc
        run: git push origin rc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
